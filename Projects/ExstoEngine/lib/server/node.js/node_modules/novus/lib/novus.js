(function (exports) {
    var io = require('socket.io'),
    	config = require('./config'),
    	fs = require('fs'),
    	path = require('path'),
    	url = require('url'),
      nv = exports;
    
    nv.version = '0.0.1';
    
    nv.app = {};

    nv.listen = function(app) {
        nv.app = app;
        
        app.on('request', function (request, response) {
          var uri = url.parse(request.url).pathname;  
          if(uri.substr(0, 6) == '/novus') {
            // Default to index.html
            if(uri.lastIndexOf('.') <= uri.lastIndexOf('/')) {
              uri += uri.charAt(uri.length) == '/' ? '' : '/';
              uri += 'index.html';
            }
            
            var filename = path.join(__dirname, './../app/' + uri);
            path.exists(filename, function(exists) {
              if(!exists) {  
                  response.writeHead(404, {"Content-Type": "text/plain"});  
                  response.end("404 Not Found\n"); 
                  return;
              }  
              
              fs.readFile(filename, "binary", function(err, file) {
                  if(err) {  
                      response.writeHead(500, {"Content-Type": "text/plain"});  
                      response.end(err + "\n");
                      return;  
                  }  
        
                  response.writeHead(200);  
                  response.end(file, "binary");  
              });  
            });
          }
        });
        
        var server = io.listen(app);
        
        server.sockets.on('connection', function(socket) {
            nv.UserManager.bind(socket);
            nv.RoomManager.bind(socket);
            
            socket.on('disconnect', function (data) {
          		socket.get('user', function (err, user) {
          		    if(err == null && user != null) {
          		      nv.UserManager.disconnect(user);
                    nv.RoomManager.disconnect(user); 
          		    }
          		});
            });
        });
    };
    
    nv.configure = config.configure,
    
    nv.UserManager = require('./usermanager');
    
    nv.RoomManager = require('./roommanager');
    
    nv.Controller = require('./controller/controller');
})(exports);