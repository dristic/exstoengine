var io = require('socket.io'),
	config = require('./config'),
	User = require('./user');
	crypto = require('crypto'),
	mongo = require('mongoskin'),
	dbUsers = null,
	um = exports,
	users = [];

um.bind = function(socket) {
	dbUsers = mongo.db(config.db.getUrl()).collection('users');
	
	socket.on('login', function(data) {
		um.isUserValid(data.name, data.password, function (success) {
			if(success == true) {
				var user = um.createUser(data.name, socket);
				socket.set('user', user);
				socket.emit('login', { success: true });
			} else {
				socket.emit('login', { success: false });
			}
		});
	});
};

um.getUser = function(conn) {
	var ret = null;
	
	users.forEach(function (user, index, array) {
		if(user.conn == conn) {
			ret = user;
			return false;
		}
	});
	
	return ret;
};

um.findUser = function(name) {
	var ret = null;
	
	users.forEach(function (user, index, array) {
		if(user.name == name) {
			ret = user;
			return false;
		}
	});
	
	return ret;
};

um.disconnect = function (user) {
	user.authenticated = false;
};

um.createUser = function (name, conn) {
	var newUser = new User(name, conn);
	users.push(newUser);
	return newUser;
};

um.isUserValid = function (name, password, callback) {
	password = crypto.createHash('md5').update(password).digest('hex');
	
	dbUsers.findOne({ name: name, password: password }, function (err, user) {
		if(user != null) {
			callback(true);
		} else {
			callback(false);
		}
	});
};